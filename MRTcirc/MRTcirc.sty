\newcommand*\MRTcirc@version{1.2.2-1}
\newcommand*\MRTcirc@date{2020-07-16}

\NeedsTeXFormat{LaTeX2e}

\ProvidesPackage{MRTcirc}
  [%
    \MRTcirc@date\space v\MRTcirc@version\space
    adapt circuitikz to the style of the MRT scripts%
  ]

\PassOptionsToPackage{european,straightvoltages}{circuitikz}
\RequirePackage{circuitikz}[2020/07/06]
\RequirePackage{etoolbox}

\begingroup
\def\MRTcirc@tmp{2020/07/15}
\unless\ifx\MRTcirc@tmp\pgfcircversiondate
  \PackageWarning{MRTcirc}
    {%
      Possibly unsupported version \pgfcircversiondate\space of circuitikz%
      \MessageBreak
      encountered, proceed with caution.%
    }
\fi
\endgroup

%% set circuitikz options >>=
%%=============================================================================
\ctikzset
  {%
     bipoles/length=1cm
    ,bipoles/thickness=1
    ,nodes width=0.06
    ,voltage=straight
    ,tripoles/european not symbol=ieee circle
  }
%%===========================================================================<<

%% add logic ports >>=
%%=============================================================================
% this macro will be patched a lot.
\let\MRTcirc@pgfcircdeclareeurologicport\pgfcircdeclareeurologicport
% one input >>=
% patch the macro >>=
\patchcmd\MRTcirc@pgfcircdeclareeurologicport
  {\pgfpathmoveto{\pgfpointorigin} \pgftext{#2}}
  {#2}
  {\PackageInfo{MRTcirc}{Adding european ports}}
  {\PackageError{MRTcirc}{Incompatible circuitikz version (eurologic)}{}}
% =<<
% comparator >>=
% settings for the comparator >>=
\tikzset{comp port/.style={shape=european comp port}}
\ctikzset{tripoles/european comp port/origin/.initial=0}%
\ctikzset{tripoles/european comp port/width/.initial=1.4}
\ctikzset{tripoles/european comp port/not height/.initial=.3}
\ctikzset{tripoles/european comp port/not width/.initial=.8}
\ctikzset{tripoles/european comp port/height/.initial=.65}
\ctikzset{tripoles/european comp port/reserved/.initial=.6}
\ctikzset{tripoles/european comp port/input height/.initial=0}
\ctikzset{tripoles/european comp port/inputs/.initial=1}%
% =<<
% shape definition >>=
\MRTcirc@pgfcircdeclareeurologicport{comp}
  {%
    \pgfscope
    \pgfpathmoveto{\pgfpoint{0.25*\pgf@circ@res@left}{-0.55*\pgf@circ@res@up}}
    \pgfpathlineto{\pgfpoint{0}{-0.55*\pgf@circ@res@up}}
    \pgfpathlineto{\pgfpoint{0}{0.55*\pgf@circ@res@up}}
    \pgfpathlineto{\pgfpoint{-0.25*\pgf@circ@res@left}{0.55*\pgf@circ@res@up}}
    \pgfpathmoveto{\pgfpoint{0.1*\pgf@circ@res@left}{0}}
    \pgfpathlineto{\pgfpoint{-0.1*\pgf@circ@res@left}{0}}
    \pgfusepath{draw}
    \endpgfscope
    %\pgfpathmoveto{\pgfpointorigin}
  }
  {1}% number of ports
  {} % not a 'not'
% =<<
% inline version of comparator >>=
\pgfcirc@port@node@to@path{comp port}{inline comp}
% =<<
% =<<
% =<<
% no input >>=
% patch the macro >>=
\patchcmd\MRTcirc@pgfcircdeclareeurologicport
  {%
    \ifnum#3=1\relax
        \anchor{in}{\southwest\pgfpoint{\pgf@x}{0pt}}%
        \anchor{in 1}{\southwest\pgfpoint{\pgf@x}{0pt}}%
        \anchor{bin}{\left\pgfpoint{\pgf@x}{0pt}}%
        \anchor{bin 1}{\left\pgfpoint{\pgf@x}{0pt}}%
    \else
        \expandafter\pgfutil@g@addto@macro
        \csname pgf@sh@s@european #1 port\endcsname{%
            \pgfmathloop
            \ifnum\pgfmathcounter>#3%
        \else
            \expandafter\xdef
            \csname pgf@anchor@european #1 port@in \pgfmathcounter\endcsname{%
                \noexpand\pgf@circ@logicport@input{\pgfmathcounter}%
            }%
            \expandafter\xdef
            \csname pgf@anchor@european #1 port@bin \pgfmathcounter\endcsname{%
                \noexpand\pgf@circ@logicport@baseinput{\pgfmathcounter}{4}{#1}%
            }%
            %}{}%
            \repeatpgfmathloop
        }
    \fi
  }
  {}
  {\PackageInfo{MRTcirc}{Adding european ports without input (patch A)}}
  {\PackageError{MRTcirc}{Incompatible circuitikz version (eurologic)}{}}
\patchcmd\MRTcirc@pgfcircdeclareeurologicport
  {\divide\pgf@circ@res@step by #3}
  {}
  {\PackageInfo{MRTcirc}{Adding european ports without input (patch B)}}
  {\PackageError{MRTcirc}{Incompatible circuitikz version (eurologic)}{}}
\patchcmd\MRTcirc@pgfcircdeclareeurologicport
  {\ifpgfcirc@draw@input@leads}
  {\iffalse}
  {\PackageInfo{MRTcirc}{Adding european ports without input (patch C)}}
  {\PackageError{MRTcirc}{Incompatible circuitikz version (eurologic)}{}}
% =<<
% clock >>=
% settings for the clock >>=
\tikzset{clock port/.style={shape=european clock port}}
\ctikzset{tripoles/european clock port/origin/.initial=0}%
\ctikzset{tripoles/european clock port/width/.initial=1.4}
\ctikzset{tripoles/european clock port/not height/.initial=.3}
\ctikzset{tripoles/european clock port/not width/.initial=.8}
\ctikzset{tripoles/european clock port/height/.initial=.65}
\ctikzset{tripoles/european clock port/reserved/.initial=.6}
\ctikzset{tripoles/european clock port/input height/.initial=0}
\ctikzset{tripoles/european clock port/inputs/.initial=1}%
% =<<
% shape definition >>=
\MRTcirc@pgfcircdeclareeurologicport{clock}
  {%
    \pgfscope
    \pgfpathmoveto{\pgfpoint{0.45*\pgf@circ@res@left}{-0.5*\pgf@circ@res@up}}
    \pgfpathlineto{\pgfpoint{0.27*\pgf@circ@res@left}{-0.5*\pgf@circ@res@up}}
    \pgfpathlineto{\pgfpoint{0.27*\pgf@circ@res@left}{0.5*\pgf@circ@res@up}}
    \pgfpathlineto{\pgfpoint{0.09*\pgf@circ@res@left}{0.5*\pgf@circ@res@up}}
    \pgfpathlineto{\pgfpoint{0.09*\pgf@circ@res@left}{-0.5*\pgf@circ@res@up}}
    \pgfpathlineto{\pgfpoint{-0.09*\pgf@circ@res@left}{-0.5*\pgf@circ@res@up}}
    \pgfpathlineto{\pgfpoint{-0.09*\pgf@circ@res@left}{0.5*\pgf@circ@res@up}}
    \pgfpathlineto{\pgfpoint{-0.27*\pgf@circ@res@left}{0.5*\pgf@circ@res@up}}
    \pgfpathlineto{\pgfpoint{-0.27*\pgf@circ@res@left}{-0.5*\pgf@circ@res@up}}
    \pgfpathlineto{\pgfpoint{-0.45*\pgf@circ@res@left}{-0.5*\pgf@circ@res@up}}
    \pgfusepath{draw}
    \endpgfscope
  }
  {0}% number of ports
  {} % not a 'not'
% =<<
% =<<
% =<<
\let\MRTcirc@pgfcircdeclareeurologicport\MRTcirc@undefined
%%===========================================================================<<

%% flip-flops >>=
%%=============================================================================
% new flip-flop options >>=
\newif\ifpgfcirc@flipflop@dashed\pgfcirc@flipflop@dashedtrue
\newif\ifpgfcirc@flipflop@wedge@stretch\pgfcirc@flipflop@wedge@stretchtrue
\let\MRTcirc@flipflop@notsymbol\pgf@circuit@ieeelogicporttrue
\ctikzset{multipoles/flipflop/dashed/.is if=pgfcirc@flipflop@dashed}
\ctikzset
  {%
    multipoles/flipflop/%
      clock wedge stretch/.is if=pgfcirc@flipflop@wedge@stretch
  }
\ctikzset
  {%
    multipoles/flipflop/.cd
    ,not symbol/.is choice
    ,not symbol/circle/.code=%
      \let\MRTcirc@flipflop@notsymbol\pgf@circuit@ieeelogicportfalse
    ,not symbol/ieee circle/.code=%
      \let\MRTcirc@flipflop@notsymbol\pgf@circuit@ieeelogicporttrue
    ,not symbol aux/.code=%
      \MRTcirc@flipflop@notsymbol
  }
% =<<
% stretch the wedges on flip-flops>>=
\patchcmd\pgf@circ@do@wedge@left
  {\fi}
  {%
    \ifpgfcirc@flipflop@wedge@stretch\pgf@circ@res@temp=2\pgf@circ@res@temp\fi
    \fi
  }
  {\PackageInfo{MRTcirc}{applying wedge left patch A}}
  {\PackageError{MRTcirc}{Incompatible circuitikz version (wedge left)}{}}
\patchcmd\pgf@circ@do@wedge@left
  {\pgf@circ@res@left+\wedge}
  {\pgf@circ@res@left+\wedge\ifpgfcirc@flipflop@wedge@stretch+\wedge\fi}
  {\PackageInfo{MRTcirc}{applying wedge left patch B}}
  {\PackageError{MRTcirc}{Incompatible circuitikz version (wedge left)}{}}
\patchcmd\pgf@circ@do@wedge@right
  {\fi}
  {%
    \ifpgfcirc@flipflop@wedge@stretch\pgf@circ@res@temp=2\pgf@circ@res@temp\fi
    \fi
  }
  {\PackageInfo{MRTcirc}{applying wedge right patch A}}
  {\PackageError{MRTcirc}{Incompatible circuitikz version (wedge right)}{}}
\patchcmd\pgf@circ@do@wedge@right
  {\pgf@circ@res@right-\wedge}
  {\pgf@circ@res@right-\wedge\ifpgfcirc@flipflop@wedge@stretch-\wedge\fi}
  {\PackageInfo{MRTcirc}{applying wedge right patch B}}
  {\PackageError{MRTcirc}{Incompatible circuitikz version (wedge right)}{}}
% =<<
% patch the dashed line into flip-flops >>=
\patchcmd\pgf@sh@bg@flipflop{\pgfscope\ifpgf@circuit@ieeelogicport}
  {%
    \ifpgfcirc@flipflop@dashed
      \pgfscope
      \def\wedge
        {\ctikzvalof{multipoles/flipflop/clock wedge size}\pgf@circ@res@step}
      \ifnum\ctikzvalof{multipoles/flipflop/c2}>0
        \let\dashes\pgfutil@firstoftwo
        \def\dashstart{\dash}%
        \ifpgfcirc@flipflop@wedge@stretch
          \def\lwedge{+\wedge+\wedge}%
        \else
          \def\lwedge{+\wedge}%
        \fi
      \else
        \let\dashes\pgfutil@secondoftwo
        \def\dashstart{0}%
        \def\lwedge{}%
      \fi
      \ifnum\ctikzvalof{multipoles/flipflop/c5}>0
        \edef\dashes{\dashes{7}{8}}%
        \ifpgfcirc@flipflop@wedge@stretch
          \def\rwedge{-\wedge-\wedge}%
        \else
          \def\rwedge{-\wedge}%
        \fi
      \else
        \edef\dashes{\dashes{8}{9}}%
        \def\rwedge{}%
      \fi
      \def\dash
        {(\pgf@circ@res@right\rwedge-(\pgf@circ@res@left\lwedge))/\dashes}%
      \pgfsetdash{\dash\dash}\dashstart
      \pgfpathmoveto
        {%
          \pgfpoint
            {\pgf@circ@res@left\lwedge}%
            {\pgf@circ@res@up+(\pgf@circ@dip@pin@shift-2)*\pgf@circ@res@step}%
        }%
      \pgfpathlineto
        {%
          \pgfpoint
            {\pgf@circ@res@right\rwedge}%
            {\pgf@circ@res@up+(\pgf@circ@dip@pin@shift-2)*\pgf@circ@res@step}%
        }%
      \pgfusepath{stroke}%
      \endpgfscope
    \fi
    \pgfscope\ifpgf@circuit@ieeelogicport
  }
  {\PackageInfo{MRTcirc}{circuitikz flipflops patched}}
  {\PackageError{MRTcirc}{Incompatible circuitikz version (flipflop)}{}}
% =<<
% restyle base flip-flops >>=
\protected\def\MRTcirc@flipflop#1#2%
  {\tikzset{flipflop #1/.style={flipflop,flipflop def={#2,##1,not symbol aux}}}}
\MRTcirc@flipflop{aSR}{t1=S,t3=R}
\MRTcirc@flipflop{SR}{t1=S,t3=R,c2=1}
\MRTcirc@flipflop{D}{t1=D,c2=1}
\MRTcirc@flipflop{JK}{t1=J,t3=K,c2=1}
\MRTcirc@flipflop{T}{t1=T,c2=1}
% =<<
%%===========================================================================<<

\endinput

% vim: ft=tex fdm=marker fmr=>>=,=<< sw=2 ts=2 tw=80
