\newcommand*\MRTtab@version{0.0.9}
\newcommand*\MRTtab@date{2019-05-03}

\NeedsTeXFormat{LaTeX2e}

\RequirePackage{expl3,xparse,setspace,array,etoolbox}
\PassOptionsToPackage{table}{xcolor}
\RequirePackage{xcolor}
\ProvidesExplPackage
  {MRTtab}          {\MRTtab@date}
  {\MRTtab@version} {tables matching the style in MRT scripts}

%% check whether the table option got used for xcolor >>=
\cs_if_exist:NF \rowcolors
  {
    \msg_new:nnn { MRTtab } { rowcolors~unavailable }
      {
        Macro~\exp_not:N \rowcolors is~not~available.~`MRTtab`~tries~to~load~
        package~`xcolor`~with~the~`table`~option,~this~however~can~fail~if~
        `xcolor`~got~loaded~earlier~without~this~option.~To~solve~this~issue~
        place~the~following~code~before~\exp_not:N \documentclass:\\
        \ \ \exp_not:n { \PassOptionsToPackage{table}{xcolor} }
      }
    \msg_error:nn { MRTtab } { rowcolors~unavailable }
  }
%=<<

%% package variables >>=
%%=============================================================================
\newcolumntype{\MRTtabRepeatCols}{!{\d@llarend&\span\@gobbletwo}}
\definecolor{tablegray}{gray}{0.85}
\tl_new:N  \l_MRTtab_tmpa_tl
\int_new:N \l_MRTtab_tmpa_int
\int_new:N \l_MRTtab_tmpb_int
\int_new:N \g__MRTtab_current_row_int
\int_new:N \g__MRTtab_color_upto_int
\int_gset:Nn \g__MRTtab_color_upto_int { -\c_max_int }
\bool_new:N \l_MRTtab_longtable_bool
\bool_new:N \l_MRTtab_bare_bool
\bool_new:N \g__MRTtab_komaoptions_defined_bool% >>=
\bool_gset:Nn \g__MRTtab_komaoptions_defined_bool
  { \cs_if_exist_p:N \KOMAoptions }% =<<
\bool_new:N \l_MRTtab_caption_above_bool
\bool_new:N \g__MRTtab_head_bool
\skip_new:N \l_MRTtab_in_text_sep_skip
\tl_new:N \l_MRTtab_table_lable_tl
\tl_new:N \g__MRTtab_bol_hook_private_tl
\tl_new:N \g__MRTtab_eol_hook_private_tl
\tl_new:N \l__MRTtab_bol_hook_public_tl
\tl_new:N \l__MRTtab_eol_hook_public_tl
\tl_new:N \l__MRTtab_table_pre_hook_tl
\tl_new:N \l__MRTtab_table_post_hook_tl
\tl_new:N \l_MRTtab_table_cap_tl
\tl_new:N \l_MRTtab_table_scap_tl
\tl_new:N \l__MRTtab_env_begin_tl
\tl_new:N \l__MRTtab_env_end_tl
\tl_new:N \l__MRTtab_cline_output_tl
% messages >>=
\msg_new:nnn { MRTtab } { patch~failed } { Patching~of~\string#1~failed. }
\msg_new:nnn { MRTtab } { KOMA~not~loaded }
  { It~seems~like~KOMA~is~not~loaded.#1 } 
\msg_new:nnn { MRTtab } { deprecated~syntax }
  {
    The~used~syntax~for~`#1`~\tl_if_empty:nF { #2 } { to~#2~ } is~deprecated~
    (but~should~still~work).~Please~take~a~look~at~`MRTtab`s~documentation.
  }
% =<<
%%===========================================================================<<

\DeclareOption { longtable } { \bool_set_true:N \l_MRTtab_longtable_bool }
\ProcessOptions\relax

%% load longtable and check it's version >>=
%%=============================================================================
\bool_if:NTF \l_MRTtab_longtable_bool
  {
    \RequirePackage{longtable}
    \tl_const:Nn \c__MRTtab_longtable_version_tl
      { 2014/10/28~v4.11~Multi-page~Table~package~(DPC)+~FMi~change }
    \tl_if_eq:cNF { ver@longtable.sty } \c__MRTtab_longtable_version_tl
      {
        \msg_new:nnn { MRTtab } { wrong~longtable~version }
          {
            The~used~longtable~version~might~be~incompatible~with~MRTtab.~
            Please~contact~MRTtab's~maintainer.
          }
        \msg_error:nn { MRTtab } { wrong~longtable~version }
      }
  }
  {
    \msg_new:nnn { MRTtab } { option~longtable~not~used }
      {
        You~have~not~used~the~option~longtable~during~package~load~time,~
        therefore~the~key~#1~is~not~defined.
      }
  }
%%===========================================================================<<

%% options >>=
%%=============================================================================
\cs_new:Npn \__MRTtab_caption_above:% >>=
  {
    \bool_if:NT \g__MRTtab_komaoptions_defined_bool
      { \KOMAoptions{captions=tableheading} }
    \bool_set_true:N \l_MRTtab_caption_above_bool
  }% =<<
\cs_new:Npn \__MRTtab_caption_below:% >>=
  {
    \bool_if:NT \g__MRTtab_komaoptions_defined_bool
      { \KOMAoptions{captions=tablesignature} }
    \bool_set_false:N \l_MRTtab_caption_above_bool
  }% =<<
\cs_new:Npn \__MRTtab_stretch_caption:n #1% >>=
  {
    \__MRTtab_setkomafont:nn { caption }      { \setstretch { #1 } \normalfont }
    \__MRTtab_setkomafont:nn { captionlabel } { \setstretch { #1 } \normalfont }
  }% =<<
\cs_new:Npn \__MRTtab_setkomafont:nn #1 #2% >>=
  {
    \bool_if:NTF \g__MRTtab_komaoptions_defined_bool
      { \setkomafont { #1 } { #2 } }
      {
        \msg_warning:nnn { MRTtab } { KOMA~not~loaded }
          { ~Therefore~\setkomafont~is~not~available. }
      }
  }% =<<
\cs_new:Npn \__MRTtab_table_stripe_invert:% >>=
  {
    \tl_set_eq:NN \l_MRTtab_tmpa_tl             \l_MRTtab_table_scolor_one_tl
    \tl_set_eq:NN \l_MRTtab_table_scolor_one_tl \l_MRTtab_table_scolor_two_tl
    \tl_set_eq:NN \l_MRTtab_table_scolor_two_tl \l_MRTtab_tmpa_tl
  }% =<<
\cs_new_protected:Npn \__MRTtab_table_label_key:n #1% >>=
  {
    \tl_if_blank:nTF { #1 }
      { \tl_clear:N \l_MRTtab_table_lable_tl }
      { \tl_set:Nn \l_MRTtab_table_lable_tl { \label{#1} } }
  }% =<<
\keys_define:nn { MRTtab }% >>=
  {
    ,caption~above   .code:n             = { \__MRTtab_caption_above: }
    ,caption~above   .value_forbidden:n  = true
    ,above           .meta:n             = { caption~above }
    ,above           .value_forbidden:n  = true
    ,bare            .bool_set:N         = \l_MRTtab_bare_bool
    ,BoL             .code:n             = { \MRTtabAddtoBoLHook { #1 } }
    ,caption~below   .code:n             = { \__MRTtab_caption_below: }
    ,caption~below   .value_forbidden:n  = true
    ,below           .meta:n             = { caption~below }
    ,below           .value_forbidden:n  = true
    ,EoL             .code:n             = { \MRTtabAddtoEoLHook { #1 } }
    ,stretch~tabular .tl_set:N           = \l_MRTtab_stretch_tl
    ,stretch~tabular .initial:n          = { 1 }
    ,stretch~tab     .meta:n             = { stretch~tabular = { #1 } }
    ,stretch         .meta:n             = { stretch~tabular = { #1 } }
    ,stretch~caption .code:n             = \__MRTtab_stretch_caption:n { #1 }
    ,stretch~cap     .meta:n             = { stretch~caption = { #1 } }
    ,cstretch        .meta:n             = { stretch~caption = { #1 } }
    ,cline~version   .choice:
    ,cline~version / 1 .code:n           =
      \cs_set:Npn \MRTtab_cline_if_hline:nTF ##1 ##2 ##3
        { \IfBooleanTF { ##1 } { ##3 } { ##2 } }
    ,cline~version / 2 .code:n           =
      \cs_set_eq:NN \MRTtab_cline_if_hline:nTF \IfBooleanTF
    ,cline~version   .initial:n          = 2
    % for MRTtable
    ,align           .tl_set:N           = \l_MRTtab_table_align_tl
    ,caption         .code:n             =
      {
        \tl_set:Nx \l_MRTtab_table_cap_tl { \tl_trim_spaces:n { #1 } }
      }
    ,cap             .meta:n             = { caption = { #1 } }
    ,columns         .tl_set:N           = \l_MRTtab_table_col_tl
    ,columns         .initial:n          = { l\MRTtabRepeatCols c }
    ,col             .meta:n             = { columns = { #1 } }
    ,env~begin       .tl_set:N           = \l__MRTtab_env_begin_tl
    ,env~end         .tl_set:N           = \l__MRTtab_env_end_tl
    ,env             .code:n             =
      {
        \tl_if_empty:nTF { #1 }
          {
            \keys_set:nn { MRTtab }
              {
                env~begin = {},
                env~end   = {},
              }
          }
          {
            \keys_set:nn { MRTtab }
              {
                env~begin = { \begin{#1} },
                env~end = { \end{#1} }
              }
          }
      }
    ,env             .initial:n          = MRTtabular
    ,float           .bool_set:N         = \l_MRTtab_table_float_bool
    ,float           .default:n          = { true }
    ,float           .initial:n          = { true }
    ,head~rows       .int_set:N          = \g__MRTtab_color_upto_int
    ,head~rows       .initial:n          = { -\c_max_int }
    ,head            .meta:n             = { head~rows = { #1 } }
    ,in~text~sep     .skip_set:N         = \l_MRTtab_in_text_sep_skip
    ,in~text~sep     .initial:n          = \intextsep
    ,label           .code:n             = { \__MRTtab_table_label_key:n { #1 }}
    ,no~float        .bool_set_inverse:N = \l_MRTtab_table_float_bool
    ,no~float        .default:n          = { true }
    ,no~inner~env    .meta:n             = { env~begin = {}, env~end = {} }
    ,no~inner~env    .value_forbidden:n  = true
    ,pos             .tl_set:N           = \l_MRTtab_table_pos_tl
    ,pos             .initial:n          = { tbp }
    ,post~tab        .code:n             = { \MRTtabAddtoPostHook { #1 } }
    ,post            .meta:n             = { pre~tab = { #1 } }
    ,pre~tab         .code:n             = { \MRTtabAddtoPreHook  { #1 } }
    ,pre             .meta:n             = { pre~tab = { #1 } }
    ,short~caption   .code:n             =
      {
        \tl_set:Nx \l_MRTtab_table_scap_tl { \tl_trim_spaces:n { #1 } }
      }
    ,short~cap       .meta:n             = { short~caption = { #1 } }
    ,scap            .meta:n             = { short~caption = { #1 } }
    ,striped         .bool_set:N         = \l_MRTtab_table_striped_bool
    ,stripe~color~1  .tl_set:N           = \l_MRTtab_table_scolor_one_tl
    ,stripe~color~1  .initial:n          = { tablegray!50 }
    ,stripe~1        .meta:n             = { stripe~color~1 = { #1 } }
    ,scolor~1        .meta:n             = { stripe~color~1 = { #1 } }
    ,scolor1         .meta:n             = { stripe~color~1 = { #1 } }
    ,stripe~color~2  .tl_set:N           = \l_MRTtab_table_scolor_two_tl
    ,stripe~color~2  .initial:n          = { white }
    ,stripe~2        .meta:n             = { stripe~color~2 = { #1 } }
    ,scolor~2        .meta:n             = { stripe~color~2 = { #1 } }
    ,scolor2         .meta:n             = { stripe~color~2 = { #1 } }
    ,stripe~invert   .code:n             = \__MRTtab_table_stripe_invert:
    ,stripe~invert   .value_forbidden:n  = true
    ,sinvert         .meta:n             = { stripe~invert }
    ,sinvert         .value_forbidden:n  = true
    ,stripe~start    .tl_set:N           = \l_MRTtab_table_stripe_start_tl
    ,stripe~start    .initial:n          = { 2 }
    ,sstart          .meta:n             = { stripe~start = { #1 } }
  }% =<<
\bool_if:NTF \l_MRTtab_longtable_bool% >>=
  {
    \keys_define:nn { MRTtab }% >>=
      {
        ,long                  .bool_set:N = \l_MRTtab_table_long_bool
        ,long                  .default:n  = { true }
        ,continue~caption      .tl_set:N   = \l_MRTtab_contcap_tl
        ,cont~cap              .meta:n     = { continue~caption = { #1 } }
        ,ccap                  .meta:n     = { continue~caption = { #1 } }
        ,continue~with~caption .bool_set:N = \l_MRTtab_contwcap_bool
        ,continue~with~caption .default:n  = { true }
        ,cont~with~cap         .meta:n     = { continue~with~caption = { #1 } }
        ,cont~with~cap         .default:n  = { true }
        ,cont~w~cap            .meta:n     = { continue~with~caption = { #1 } }
        ,cont~w~cap            .default:n  = { true }
        ,continue~text         .tl_set:N   = \l_MRTtab_table_continue_tl
        ,continue~text         .initial:n  = {(\emph{Fortsetzung})}
        ,cont~text             .meta:n     = { continue~text = { #1 } }
        ,ctext                 .meta:n     = { continue~text = { #1 } }
      }% =<<
  }
  {
    \bool_new:N \l_MRTtab_table_long_bool
    \clist_map_inline:nn% >>=
      {
        long, continue~caption, cont~cap, ccap, continue~with~caption,
        cont~with~cap, cont~w~cap, continue~text, cont~text, ctext
      }
      {
        \keys_define:nn { MRTtab }
          {
            #1.code:n =
              { \msg_error:nnn { MRTtab } { option~longtable~not~used } { #1 } }
          }
      }% =<<
  }% =<<
%%===========================================================================<<

%% package macros >>=
%%=============================================================================
\NewDocumentCommand \MRTtabSetup { +m }% >>=
  {
    \keys_set:nn { MRTtab } { #1 }
  }% =<<
%%===========================================================================<<

%% MRTtabular >>=
%%=============================================================================
\cs_new:Npn \MRTtab@BoLHook% >>=
  {
    \g__MRTtab_bol_hook_private_tl
    \l__MRTtab_bol_hook_public_tl
  }% =<<
\cs_new:Npn \MRTtab@EoLHook% >>=
  {
    \g__MRTtab_eol_hook_private_tl
    \l__MRTtab_eol_hook_public_tl
  }% =<<
\cs_new_protected:Npn \MRTtab@@arraystarthook% >>=
  {
    \int_gset:Nn \g__MRTtab_current_row_int { \c_zero }
  }% =<<
\cs_new_protected:Npn \MRTtab_step_row:% >>=
  {
    \int_gincr:N \g__MRTtab_current_row_int
  }% =<<
\cs_new_protected:Npn \MRTtab_addto_private_bol_hook:n #1% >>=
  {
    \tl_gput_right:Nn \g__MRTtab_bol_hook_private_tl { #1 }
  }% =<<
\cs_new_protected:Npn \MRTtab_addto_private_eol_hook:n #1% >>=
  {
    \tl_gput_right:Nn \g__MRTtab_eol_hook_private_tl { #1 }
  }% =<<
\cs_new_protected:Npn \MRTtab_clear_private_bol_hook:% >>=
  {
    \tl_gclear:N \g__MRTtab_bol_hook_private_tl
  }% =<<
\cs_new_protected:Npn \MRTtab_clear_private_eol_hook:% >>=
  {
    \tl_gclear:N \g__MRTtab_eol_hook_private_tl
  }% =<<
\cs_new_protected:Npn \MRTtab_addto_public_bol_hook:n #1% >>=
  {
    \tl_put_right:Nn \l__MRTtab_bol_hook_public_tl { #1 }
  }% =<<
\cs_new_protected:Npn \MRTtab_addto_public_eol_hook:n #1% >>=
  {
    \tl_put_right:Nn \l__MRTtab_eol_hook_public_tl { #1 }
  }% =<<
\cs_new_protected:Npn \MRTtab_clear_public_bol_hook:% >>=
  {
    \tl_clear:N \l__MRTtab_bol_hook_public_tl
  }% =<<
\cs_new_protected:Npn \MRTtab_clear_public_eol_hook:% >>=
  {
    \tl_clear:N \l__MRTtab_eol_hook_public_tl
  }% =<<
\cs_new_protected:Npn \MRTtab_patchcmd:Nnn #1 #2 #3% >>=
  {
    \patchcmd #1 { #2 } { #3 } {} 
      { \msg_error:nnn { MRTtab } { patch~failed} { #1 } }
  }% =<<
\cs_new_protected:Npn \MRTtab_pretocmd:Nn #1 #2% >>=
  {
    \pretocmd #1 { #2 } {} { \msg_error:nnn { MRTtab } { patch~failed } { #1 } }
  }% =<<
\cs_new_protected:Npn \MRTtab_apptocmd:Nn #1 #2% >>=
  {
    \apptocmd #1 { #2 } {} { \msg_error:nnn { MRTtab } { patch~failed } { #1 } }
  }% =<<
\cs_new_protected:Npn \MRTtab_backup_array:%>>=
  {
    \cs_set_eq:NN \@@array_original      \@@array
    \cs_set_eq:NN \@arraycr_original     \@arraycr
    \cs_set_eq:NN \@xarraycr_original    \@xarraycr
    \cs_set_eq:NN \@xargarraycr_original \@xargarraycr
    \cs_set_eq:NN \@yargarraycr_original \@yargarraycr
    \cs_set_eq:NN \tabular_original      \tabular
    \cs_set_eq:NN \endtabular_original   \endtabular
    \cs_set_eq:NN \array_original        \array
    \cs_set_eq:NN \endarray_original     \endarray
  }%=<<
\cs_new_protected:Npn \MRTtab@unpatcharray% >>=
  {
    \cs_set_eq:NN \@@array      \@@array_original
    \cs_set_eq:NN \@arraycr     \@arraycr_original
    \cs_set_eq:NN \@xarraycr    \@xarraycr_original
    \cs_set_eq:NN \@xargarraycr \@xargarraycr_original
    \cs_set_eq:NN \@yargarraycr \@yargarraycr_original
    \cs_set_eq:NN \tabular      \tabular_original
    \cs_set_eq:NN \endtabular   \endtabular_original
    \cs_set_eq:NN \array        \array_original
    \cs_set_eq:NN \endarray     \endarray_original
  }% =<<
\cs_new_protected:Npn \MRTtab_patch_array:% >>=
  {
    \MRTtab_backup_array:
    \MRTtab_pretocmd:Nn  \tabular      { \MRTtab@unpatcharray }
    \MRTtab_pretocmd:Nn  \array        { \MRTtab@unpatcharray }
    \MRTtab_pretocmd:Nn  \@@array      { \MRTtab@@arraystarthook }
    \MRTtab_pretocmd:Nn  \@arraycr     { \MRTtab@EoLHook }
    \MRTtab_apptocmd:Nn  \@yargarraycr { \MRTtab@BoLHook }
    \MRTtab_patchcmd:Nnn \@xarraycr    { \cr } { \cr \MRTtab@BoLHook }
    \MRTtab_patchcmd:Nnn \@xargarraycr { \cr } { \cr \MRTtab@BoLHook }
    \MRTtab_patchcmd:Nnn \@@array      { \cr } { \cr \noexpand \MRTtab@BoLHook }
  }% =<<
\cs_new:Npn \MRTtab_head_start_inner:% >>=
  {
    \int_compare:nNnF \g__MRTtab_current_row_int = \c_one
      { \MRTtab_surround_lines: }
    \headR
  }% =<<
\cs_new:Npn \MRTtab_declare_head_macro:% >>=
  {
    \DeclareExpandableDocumentCommand \head { m }
      {
        \headS
        \noalign
          {
            \int_gset:Nn \g__MRTtab_color_upto_int
              { \g__MRTtab_current_row_int + ##1 - \c_one }
          }
      }
    \MRTtab_declare_head_macrosSRE:
  }% =<<
\cs_new:Npn \MRTtab_declare_head_macrosSRE:% >>=
  {
    \DeclareExpandableDocumentCommand \headS { }
      {
        \noalign { \bool_gset_true:N \g__MRTtab_head_bool }
        \MRTtab_head_start_inner:
      }
    \DeclareExpandableDocumentCommand \headR { }
      {
        \rowcolor { tablegray }
      }
    \DeclareExpandableDocumentCommand \headE { }
      {
        \noalign { \bool_gset_false:N \g__MRTtab_head_bool }
        \MRTtab_surround_lines:
      }
  }% =<<
\cs_new:Npn \MRTtab_surround_lines:% >>=
  {
    \int_compare:nNnF
      { \g__MRTtab_color_upto_int + 1 } = { \g__MRTtab_current_row_int }
      { \crcr \hline }
  }% =<<
\cs_new:Npn \MRTtab_head_hook:% >>=
  {
    \int_compare:nNnTF \g__MRTtab_current_row_int > \g__MRTtab_color_upto_int
      {
        \int_compare:nNnT
          { \g__MRTtab_color_upto_int + \c_one } = \g__MRTtab_current_row_int
          { \headE\hline }
      }
      {
        \headR
      }
  }% =<<
\MRTtab_addto_private_bol_hook:n { \noalign { \MRTtab_step_row: } }
\MRTtab_addto_private_bol_hook:n { \MRTtab_head_hook: }
\NewDocumentEnvironment { MRTtabular } { O{} o +m o }% >>=
  {% begin >>=
    \MRTtab_patch_array:
    \MRTtab_declare_head_macro:
    \bool_gset_false:N \g__MRTtab_head_bool
    \IfValueT { #2 }
      {
        \int_gset:Nn \g__MRTtab_color_upto_int { #2 }
        \msg_warning:nnnn { MRTtab } { deprecated~syntax } { MRTtabular }
          { set~the~number~of~head~rows }
      }
    \IfValueT { #4 } { \int_gset:Nn \g__MRTtab_color_upto_int { #4 } }
    \setstretch { \l_MRTtab_stretch_tl }
    \begin{tabular_original}[#1]{#3}
      \MRTtab_surround_lines:
  }% =<<
  {% end >>=
      \MRTtab_surround_lines:
      %\crcr\hline
    \end{tabular_original}
    \int_gset:Nn \g__MRTtab_color_upto_int { -\c_max_int }
  }% =<<
  % =<<
\NewDocumentCommand \MRTtabAddtoBoLHook { +m }% >>=
  {
    \MRTtab_addto_public_bol_hook:n { #1 }
  }% =<<
\NewDocumentCommand \MRTtabAddtoEoLHook { +m }% >>=
  {
    \MRTtab_addto_public_eol_hook:n { #1 }
  }% =<<
\NewDocumentCommand \MRTtabClearBoLHook {}% >>=
  {
    \MRTtab_clear_public_bol_hook:
  }% =<<
\NewDocumentCommand \MRTtabClearEoLHook {}% >>=
  {
    \MRTtab_clear_public_eol_hook:
  }% =<<
\NewExpandableDocumentCommand \MRTtabCurrentRow {}% >>=
  {
    \int_use:N \g__MRTtab_current_row_int
  }% =<<
\NewDocumentCommand \MRTtabDeclareHeadMacros {}% >>=
  {
    \MRTtab_declare_head_macrosSRE:
  }% =<<
%%===========================================================================<<

%% MRTcline >>=
%%=============================================================================
\cs_new:Npn \MRTtab_cline_output_single:nNnnnn #1 #2 #3 #4 #5 #6% >>=
  {
    % #1 fill color
    % #2 if star
    % #3 left skip
    % #4 right skip
    % #5 start column
    % #6 end column
    \tl_put_right:Nn \l__MRTtab_cline_output_tl
      {
        \@multicnt#5
        \advance\@multispan\m@ne
        \ifnum\@multicnt=\@ne
          \@firstofone{&\omit}
        \fi
        \@multicnt#6
        \advance\@multicnt -#5
        \advance\@multispan\@ne
        \group_begin:
          \color{#1}\rule{#3}\arrayrulewidth
        \group_end:
        \group_begin:
          \bool_if:NTF #2 { \color { #1 } } { \CT@arc@ }
          \leaders\hrule\@height\arrayrulewidth\hfill
        \group_end:
        \group_begin:
          \color{#1}\rule{#4}\arrayrulewidth
        \group_end:
        \cr
        \noalign{\vskip-\arrayrulewidth}
      }
  }% =<<
\cs_generate_variant:Nn \MRTtab_cline_output_single:nNnnnn { xNxxxx }
\cs_new:Npn \MRTtab_cline_output_strip:nNnnnn #1 #2 #3 #4 #5 #6% >>=
  {
    % #1 fill color
    % #2 if star
    % #3 left skip
    % #4 right skip
    % #5 start column
    % #6 end column
    \MRTtab_cline_output_single:xNxxxx
      { \tl_trim_spaces:n { #1 } }
      #2
      { \tl_trim_spaces:n { #3 } }
      { \tl_trim_spaces:n { #4 } }
      { \tl_trim_spaces:n { #5 } }
      { \tl_trim_spaces:n { #6 } }
  }% =<<
\cs_new:Npn \MRTtab_cline_split_columns:nNnnw #1 #2 #3 #4 #5 - #6 \q_stop% >>=
  {
    % #1 fill color
    % #2 if star
    % #3 left skip
    % #4 right skip
    % #5 start column
    % #6 end column
    \MRTtab_cline_output_strip:nNnnnn { #1 } #2 { #3 } { #4 } { #5 } { #6 }
  }% =<<
\cs_new:Npn \MRTtab_cline_get_columns:nNnnw #1 #2 #3 #4 #5 \q_stop% >>=
  {
    % #1 fill color
    % #2 if star
    % #3 left skip
    % #4 right skip
    % #5 columns
    %\tl_analysis_show:n { #5 }
    \tl_if_in:nnTF { #5 } { , }
      { \MRTtab_cline_column_group:nNnnn { #1 } #2 { #3 } { #4 } { #5 } }
      {
        \tl_if_in:nnTF { #5 } { - }
          {
            \MRTtab_cline_split_columns:nNnnw { #1 } #2 { #3 } { #4 } #5 \q_stop
          }
          {
            \MRTtab_cline_output_strip:nNnnnn { #1 } #2 { #3 } { #4 } { #5 }
            { #5 }
          }
      }
  }% =<<
\cs_new:Npn \MRTtab_cline_column_group:nNnnn #1 #2 #3 #4 #5% >>=
  {
    % #1 fill color
    % #2 if star
    % #3 left skip
    % #4 right skip
    % #5 column group
    %\tl_analysis_show:n { #5 }
    %\tl_analysis_show:n { #6 }
    \int_set:Nn \l_MRTtab_tmpb_int { \clist_count:n { #5 } }
    \clist_map_inline:nn { #5 }
      {
        \int_decr:N \l_MRTtab_tmpb_int
        \MRTtab_cline_get_columns:nNnnw { #1 } #2 { #3 } { #4 } ##1 \q_stop
        \int_compare:nNnT \l_MRTtab_tmpb_int > 0
          { \tl_put_right:Nn \l__MRTtab_cline_output_tl { \omit } }
      }
  }% =<<
\cs_new:Npn \MRTtab_cline_peek_column_group:nNnn #1 #2 #3 #4% >>=
  {
    % #1 fill color
    % #2 if star
    % #3 left skip
    % #4 right skip
    \peek_meaning_ignore_spaces:NTF \c_group_begin_token
      { \MRTtab_cline_column_group:nNnnw { #1 } #2 { #3 } { #4 } }
      { \MRTtab_cline_get_columns:nNnnw { #1 } #2 { #3 } { #4 } }
  }% =<<
\cs_new:Npn \MRTtab_cline_get_right_skip:nNnw #1 #2 #3 [ #4 ]% >>=
  {
    % #1 fill color
    % #2 if star
    % #3 left skip
    % #4 right skip
    %\MRTtab_cline_peek_column_group:nNnn { #1 } #2 { #3 } { #4 }
    \MRTtab_cline_get_columns:nNnnw { #1 } #2 { #3 } { #4 }
  }% =<<
\cs_new:Npn \MRTtab_cline_peek_right_skip:nNn #1 #2 #3% >>=
  {
    % #1 fill color
    % #2 if star
    % #3 left skip
    \peek_meaning_ignore_spaces:NTF [%]
      { \MRTtab_cline_get_right_skip:nNnw { #1 } #2 { #3 } }
      { \MRTtab_cline_get_columns:nNnnw { #1 } #2 { #3 } { .5\tabcolsep } }
  }% =<<
\cs_new:Npn \MRTtab_cline_peek_right:nNn #1 #2 #3% >>=
  {
    % #1 fill color
    % #2 if star
    % #3 left skip
    \peek_meaning_remove_ignore_spaces:NTF >
      { \MRTtab_cline_peek_right_skip:nNn { #1 } #2 { #3 } }
      { \MRTtab_cline_get_columns:nNnnw { #1 } #2 { #3 } { 0pt } }
  }% =<<
\cs_new:Npn \MRTtab_cline_get_left_skip:nNw #1 #2 [ #3 ]% >>=
  {
    % #1 fill color
    % #2 if star
    % #3 left skip
    \MRTtab_cline_peek_right:nNn { #1 } #2 { #3 }
  }% =<<
\cs_new:Npn \MRTtab_cline_peek_left_skip:nN #1 #2% >>=
  {
    % #1 fill color
    % #2 if star
    \peek_meaning_ignore_spaces:NTF [%]
      { \MRTtab_cline_get_left_skip:nNw { #1 } #2 }
      { \MRTtab_cline_peek_right:nNn { #1 } #2 { .5\tabcolsep } }
  }% =<<
\cs_new:Npn \MRTtab_cline_peek_left:nN #1 #2% >>=
  {
    % #1 fill color
    % #2 if star
    \peek_meaning_remove_ignore_spaces:NTF <
      { \MRTtab_cline_peek_left_skip:nN { #1 } #2 }
      { \MRTtab_cline_peek_right:nNn { #1 } #2 { 0pt } }
  }% =<<
\cs_new:Npn \MRTtab_cline_individual_color:Nw #1 [ #2 ]% >>=
  {
    % #1 if star
    % #2 fill color
    \MRTtab_cline_peek_left:nN { #2 } #1
  }% =<<
\cs_new:Npn \MRTtab_cline_peek_color:nN #1 #2% >>=
  {
    % #1 fill color
    % #2 if star
    \peek_meaning_ignore_spaces:NTF [%]
      { \MRTtab_cline_individual_color:Nw #2 }
      { \MRTtab_cline_peek_left:nN { #1 } #2 }
  }% =<<
\cs_new:Npn \MRTtab_cline_peek_star:n #1% >>=
  {
    % #1 fill color
    \peek_meaning_remove_ignore_spaces:NTF *
      { \MRTtab_cline_peek_color:nN { #1 } \c_true_bool }
      { \MRTtab_cline_peek_color:nN { #1 } \c_false_bool }
  }% =<<
\cs_new:Npn \MRTtab_cline_arg_parser:nnn #1 #2 #3% >>=
  {
    % #1 if everything coloured
    % #2 fill colour
    \MRTtab_cline_if_hline:nTF { #1 }
      { \tl_clear:N \l__MRTtab_cline_output_tl }
      {
        \tl_set:Nn \l__MRTtab_cline_output_tl
          {
            \cr
            \noalign
              {
                { \color { #2 } \hrule \@height \arrayrulewidth }
                \vskip -\arrayrulewidth
              }
            \omit
          }
      }
    \int_set:Nn \l_MRTtab_tmpa_int { \clist_count:n { #3 } }
    \clist_map_inline:nn { #3 }
      {
        \int_decr:N \l_MRTtab_tmpa_int
        \MRTtab_cline_peek_star:n { #2 } ##1 \q_stop
        \int_compare:nNnT \l_MRTtab_tmpa_int > 0
          { \tl_put_right:Nn \l__MRTtab_cline_output_tl { \omit } }
      }
  }% =<<
\cs_generate_variant:Nn \MRTtab_cline_arg_parser:nnn { nxn }
\NewExpandableDocumentCommand \clineReveal { }% >>=
  {
    \noalign { \vskip \arrayrulewidth }
  }% =<<
\NewExpandableDocumentCommand \MRTcline { }% >>=
  {
    \omit
    \MRTtab@cline
  }% =<<
\NewDocumentCommand \MRTtab@cline { t! o m }% >>=
  {
    \MRTtab_cline_arg_parser:nxn
      { #1 }
      {
        \IfNoValueTF { #2 }
          {
            \bool_if:NTF \g__MRTtab_head_bool { tablegray }
              {
                \int_compare:nNnTF
                  \g__MRTtab_current_row_int > \g__MRTtab_color_upto_int
                  { white }
                  { tablegray }
              }
          }
          { #2 }
      }
      { #3 }
    \l__MRTtab_cline_output_tl
    \clineReveal
    \bool_if:nT
      {
        \g__MRTtab_head_bool ||
        !\int_compare_p:nNn
          \g__MRTtab_current_row_int > \g__MRTtab_color_upto_int
      }
      { \headR }
  }% =<<
%%===========================================================================<<

%% MRTtable >>=
%%=============================================================================
%\cs_generate_variant:Nn \exp_last_unbraced:NNNV { NnNV }
\cs_new:Npn \MRTtab_table_addto_pre_hook:n #1% >>=
  {
    \tl_put_right:Nn \l__MRTtab_table_pre_hook_tl { #1 }
  }% =<<
\cs_new:Npn \MRTtab_table_clear_pre_hook:% >>=
  {
    \tl_clear:N \l__MRTtab_table_pre_hook_tl
  }% =<<
\cs_new:Npn \MRTtab_table_addto_post_hook:n #1% >>=
  {
    \tl_put_right:Nn \l__MRTtab_table_post_hook_tl { #1 }
  }% =<<
\cs_new:Npn \MRTtab_table_clear_post_hook:% >>=
  {
    \tl_clear:N \l__MRTtab_table_post_hook_tl
  }% =<<
\cs_new:Npn \__MRTtab_table_caption:% >>=
  {
    \tl_if_blank:VF \l_MRTtab_table_cap_tl
      {
        \tl_if_blank:VTF \l_MRTtab_table_scap_tl
          {
            \caption { \l_MRTtab_table_cap_tl \l_MRTtab_table_lable_tl }
          }
          {
            \caption
              [ \l_MRTtab_table_scap_tl ]
              { \l_MRTtab_table_cap_tl \l_MRTtab_table_lable_tl }
          }
      }
  }% =<<
\cs_new:Npn \__MRTtab_table_normal_start:% >>=
  {
    \bool_if:NTF \l_MRTtab_bare_bool
      {
        \def \@captype { table }
      }
      {
        \bool_if:NTF \l_MRTtab_table_float_bool
          {
            \def\MRTtab@tmpa{\begin{table}}
            \exp_last_unbraced:NNV \MRTtab@tmpa [ \l_MRTtab_table_pos_tl ]
          }
          {
            \def \@captype { table }% make \caption work
            \skip_if_eq:nnF { \l_MRTtab_in_text_sep_skip } { \c_zero_skip }
              { \vskip \l_MRTtab_in_text_sep_skip }
            \noindent
            \tl_if_empty:NTF \l_MRTtab_table_align_tl
              {
                \begin { minipage } { \linewidth }
              }
              {
                \exp_last_unbraced:NnNo
                \begin { minipage } [ \l_MRTtab_table_align_tl ] { \linewidth }
              }
          }
      }
    \centering
    \bool_if:NT \l_MRTtab_caption_above_bool
      {
        \let \if@captionabove \iftrue
        \__MRTtab_table_caption:
      }
    \l__MRTtab_table_pre_hook_tl
    \tl_if_empty:NF \l__MRTtab_env_begin_tl
      { \exp_args:NV \l__MRTtab_env_begin_tl \l_MRTtab_table_col_tl }
  }% =<<
\cs_new:Npn \__MRTtab_table_normal_end:% >>=
  {
    \l__MRTtab_env_end_tl
    \l__MRTtab_table_post_hook_tl
    \bool_if:NF \l_MRTtab_caption_above_bool
      {
        \let \if@captionabove \iffalse
        \__MRTtab_table_caption:
      }
    \bool_if:NF \l_MRTtab_bare_bool
      {
        \bool_if:NTF \l_MRTtab_table_float_bool
          { \end { table } }
          {
            \end { minipage }
            \skip_if_eq:nnF { \l_MRTtab_in_text_sep_skip } { \c_zero_skip }
              { \vskip \l_MRTtab_in_text_sep_skip }
          }
      }
  }% =<<
\NewDocumentEnvironment { MRTtable } { +O{} }% >>=
  {% begin >>=
    \MRTtabDeclareHeadMacros
    \MRTtabSetup { head = 1, #1 }
    \bool_if:NT \l_MRTtab_table_striped_bool
      {
        \rowcolors { \l_MRTtab_table_stripe_start_tl }
          { \l_MRTtab_table_scolor_one_tl } { \l_MRTtab_table_scolor_two_tl }
      }
    \bool_if:NTF \l_MRTtab_table_long_bool
      { \__MRTtab_table_long_start: }
      { \__MRTtab_table_normal_start: }
  }% =<<
  {% end >>=
    \bool_if:NTF \l_MRTtab_table_long_bool
      { \__MRTtab_table_long_end: }
      { \__MRTtab_table_normal_end: }
  }% =<<
  % =<<
\NewDocumentCommand \MRTtabAddtoPreHook { +m }% >>=
  {
    \MRTtab_table_addto_pre_hook:n { #1 }
  }% =<<
\NewDocumentCommand \MRTtabAddtoPostHook { +m }% >>=
  {
    \MRTtab_table_addto_post_hook:n { #1 }
  }% =<<
\NewDocumentCommand \MRTtabClearPreHook {}% >>=
  {
    \MRTtab_table_clear_pre_hook:
  }% =<<
\NewDocumentCommand \MRTtabClearPostHook {}% >>=
  {
    \MRTtab_table_clear_post_hook:
  }% =<<
%%===========================================================================<<

%% \endfirstfoot addition to longtable >>=
%%=============================================================================
% code from: https://tex.stackexchange.com/questions/68439/
% it should allow a \endfirstfoot in longtable
\bool_if:NT \l_MRTtab_longtable_bool
  {
    \newbox\LT@firstfoot
    \def\endfirstfoot{\LT@end@hd@ft\LT@firstfoot}
    \newdimen\LT@footdiff
    \def\LT@start
      {%
        \let\LT@start\endgraf
        \endgraf\penalty\z@
        \vskip\LTpre
        \LT@footdiff-\ht\LT@foot
        \advance\LT@footdiff\ht\LT@firstfoot
        \dimen@\pagetotal
        \advance\dimen@ \ht\ifvoid\LT@firsthead\LT@head\else\LT@firsthead\fi
        \advance\dimen@ \dp\ifvoid\LT@firsthead\LT@head\else\LT@firsthead\fi
        \advance\dimen@ \ht\ifvoid\LT@firstfoot\LT@foot\else\LT@firstfoot\fi
        \dimen@ii\vfuzz
        \vfuzz\maxdimen
        \setbox\tw@\copy\z@
        \setbox\tw@\vsplit\tw@ to \ht\@arstrutbox
        \setbox\tw@\vbox{\unvbox\tw@}%
        \vfuzz\dimen@ii
        \advance\dimen@ \ht
          \ifdim\ht\@arstrutbox>\ht\tw@\@arstrutbox\else\tw@\fi
        \advance\dimen@\dp
          \ifdim\dp\@arstrutbox>\dp\tw@\@arstrutbox\else\tw@\fi
        \advance\dimen@ -\pagegoal
        \ifdim \dimen@>\z@\vfil\break\fi
        \global\@colroom\@colht
        \ifvoid\LT@firstfoot
          \ifvoid\LT@foot
          \else
            \advance\vsize-\ht\LT@foot
            \global\advance\@colroom-\ht\LT@foot
            \dimen@\pagegoal\advance\dimen@-\ht\LT@foot\pagegoal\dimen@
            \maxdepth\z@
          \fi
        \else
          \advance\vsize-\ht\LT@firstfoot
          \global\advance\@colroom-\ht\LT@firstfoot
          \dimen@\pagegoal\advance\dimen@-\ht\LT@firstfoot\pagegoal\dimen@
          \maxdepth\z@
        \fi
        \ifvoid\LT@firsthead\copy\LT@head\else\box\LT@firsthead\fi\nobreak
        \output{\LT@output}%
      }
    \def\LT@output
      {%
        \ifnum\outputpenalty <-\@Mi
          \ifnum\outputpenalty > -\LT@end@pen
            \LT@err{floats~and~marginpars~not~allowed~in~a~longtable}\@ehc
          \else
            \setbox\z@\vbox{\unvbox\@cclv}%
            \ifdim \ht\LT@lastfoot>\ht\LT@foot
              \dimen@\pagegoal
              \advance\dimen@-\ht\LT@lastfoot
              \ifdim\dimen@<\ht\z@
                \setbox\@cclv\vbox{\unvbox\z@\copy\LT@foot\vss}%
                \@makecol
                \@outputpage
                \setbox\z@\vbox{\box\LT@head}%
              \fi
            \fi    
            \global\@colroom\@colht
            \global\vsize\@colht     
            \vbox
              {\unvbox\z@\box\ifvoid\LT@lastfoot\LT@foot\else\LT@lastfoot\fi}%
          \fi
        \else
          \ifvoid\LT@firstfoot
            \setbox\@cclv\vbox{\unvbox\@cclv\copy\LT@foot\vss}%
            \@makecol
            \@outputpage
            \global\vsize\@colroom
          \else
            \setbox\@cclv\vbox{\unvbox\@cclv\box\LT@firstfoot\vss}%
            \@makecol
            \@outputpage
            \global\advance\@colroom\LT@footdiff
            \global\vsize\@colroom
          \fi
          \copy\LT@head\nobreak
        \fi
      }
  }
%%===========================================================================<<

%% MRTtable[long] >>=
%%=============================================================================
\bool_if:NT \l_MRTtab_longtable_bool
  {
    \tl_new:N \g__MRTtab_bol_hook_private_long_tl
    \box_new:N \l__MRTtab_long_head_box
    \msg_new:nnn { MRTtab } { auto~cols~in~long }
      {
        The ~ usage ~ of ~ \exp_not:N \MRTtabRepeatCols ~ in ~ a ~ longtable ~
        results ~ in ~ very ~ odd ~ column ~ widths. ~ Please ~ specify ~ the ~
        columns ~ explicitly.
      }
    \cs_new_protected:Npn \MRTtab_patch_array_long:% >>=
      {
        \MRTtab_backup_array:
        \MRTtab_pretocmd:Nn  \tabular         { \MRTtab@unpatcharray }
        \MRTtab_pretocmd:Nn  \array           { \MRTtab@unpatcharray }
        \MRTtab_pretocmd:Nn  \LT@tabularcr    { \MRTtab@EoLHook }
        \MRTtab_apptocmd:Nn  \LT@ntabularcr   { \MRTtab@long@BoLHook }
        \MRTtab_apptocmd:Nn  \LT@argtabularcr { \MRTtab@long@BoLHook }
        \MRTtab_patchcmd:Nnn \LT@t@bularcr    { \LT@LL@FM@cr } { \MRTtab@FM@cr }
      }% =<<
    \cs_new_protected:Npn \MRTtab@FM@cr%>>=
      {
        \relax\iffalse{\fi\ifnum0=`}\fi\@ifstar\MRTtab@xarraycr\MRTtab@xarraycr
      }%=<<
    \cs_new_protected:Npn \MRTtab@xarraycr%>>=
      {
        \@ifnextchar[\MRTtab@argarraycr{\ifnum0=`{}\fi\cr\MRTtab@long@BoLHook}
      }%=<<
    \cs_new_protected:Npn \MRTtab@argarraycr [ #1 ]%>>=
      {
        \ifnum0=`{}\fi
        \ifdim#1>\z@
          \expandafter\MRTtab@xargarraycr
        \else
          \expandafter\MRTtab@yargarraycr
        \fi
        { #1 }
      }%=<<
    \cs_new_protected:Npn \MRTtab@xargarraycr #1%>>=
      {
        \unskip
        \gdef\do@row@strut
          {
            \@tempdima#1
            \advance\@tempdima\dp\@arstrutbox
            \vrule\@depth\@tempdima\@width\z@
            \global\let\do@row@strut\relax
          }
        \ifnum\@multicnt>\z@
          \do@row@strut
        \fi
        \cr
        \MRTtab@long@BoLHook
      }%=<<
    \cs_new_protected:Npn \MRTtab@yargarraycr #1%>>=
      {
        \cr
        \noalign { \vskip #1 }
        \MRTtab@long@BoLHook
      }%=<<
    \cs_new_protected:Npn \MRTtab_addto_private_bol_long_hook:n #1% >>=
      {
        \tl_gput_right:Nn \g__MRTtab_bol_hook_private_long_tl { #1 }
      }% =<<
    \cs_new:Npn \MRTtab_endhead:%>>=
      {
        \hline
        \LT@echunk
        \LT@get@widths
        \bool_if:NT \l_MRTtab_table_striped_bool
          { \int_set:Nn \l_MRTtab_tmpa_int { \rownum } }
        \ifx\LT@start\endgraf
          \LT@err
            { Longtable~head~or~foot~not~at~start~of~table }
            { Increase~LTchunksize }
        \fi
        \bool_if:NTF \l_MRTtab_caption_above_bool
          {
            \setbox \l__MRTtab_long_head_box \box \z@
            \bool_if:NT \l_MRTtab_table_striped_bool
              { \int_set:Nn \rownum { -\c_max_int } }
            \LT@bchunk
            \__MRTtab_table_caption:
            \LT@echunk
            \setbox\LT@firsthead\vbox{\box\z@\copy\l__MRTtab_long_head_box}
            \LT@bchunk
            \__MRTtab_table_cont_caption:
            \LT@echunk
            \setbox\LT@head\vbox{\box\z@\box\l__MRTtab_long_head_box}
          }
          { \setbox\LT@head\box\z@ }
        \bool_if:NT \l_MRTtab_table_striped_bool
          { \int_set:Nn \rownum { \l_MRTtab_tmpa_int - 4 } }
        \LT@bchunk
      }%=<<
    \cs_new:Npn \MRTtab_long_head_hook:%>>=
      {
        \int_compare:nNnTF
          \g__MRTtab_current_row_int > \g__MRTtab_color_upto_int
          {
            \int_compare:nNnT
              { \g__MRTtab_color_upto_int + \c_one }
              = \g__MRTtab_current_row_int
              { \headE\MRTtab_endhead: }
          }
          { \headR }
      }%=<<
    \MRTtab_addto_private_bol_long_hook:n { \noalign { \MRTtab_step_row: } }
    \MRTtab_addto_private_bol_long_hook:n { \MRTtab_long_head_hook: }
    \cs_new:Npn \MRTtab@long@BoLHook%>>=
      {
        \g__MRTtab_bol_hook_private_long_tl
        \l__MRTtab_bol_hook_public_tl
      }%=<<
    \cs_new:Npn \__MRTtab_table_cont_cap_aux:N #1%>>=
      {
        \caption [] { #1 ~ \l_MRTtab_table_continue_tl }
      }%=<<
    \cs_new:Npn \__MRTtab_table_cont_caption:%>>=
      {
        \tl_if_blank:VF \l_MRTtab_table_cap_tl
          {
            \bool_if:NTF \l_MRTtab_contwcap_bool
              { \__MRTtab_table_cont_cap_aux:N \l_MRTtab_table_cap_tl }
              {
                \tl_if_blank:VTF \l_MRTtab_contcap_tl
                  {
                    \tl_if_blank:VTF \l_MRTtab_table_scap_tl
                      { \__MRTtab_table_cont_cap_aux:N \l_MRTtab_table_cap_tl }
                      { \__MRTtab_table_cont_cap_aux:N \l_MRTtab_table_scap_tl }
                  }
                  { \__MRTtab_table_cont_cap_aux:N \l_MRTtab_contcap_tl }
              }
          }
      }%=<<
    \cs_new:Npn \__MRTtab_hide_rowcolors:
      { \bool_if:NT \l_MRTtab_table_striped_bool { \hiderowcolors } }
    \cs_new:Npn \__MRTtab_show_rowcolors:
      { \bool_if:NT \l_MRTtab_table_striped_bool { \showrowcolors } }
    \cs_new:Npn \__MRTtab_table_long_start:%>>=
      {
        \setstretch { \l_MRTtab_stretch_tl }
        \MRTtab_patch_array_long:
        \tl_if_in:NnT \l_MRTtab_table_col_tl { \MRTtabRepeatCols }
          {
            \msg_error:nn { MRTtab } { auto~cols~in~long }
          }
        \int_gset:Nn \g__MRTtab_current_row_int { 1 }
        \l__MRTtab_table_pre_hook_tl
        \exp_args:NnV \begin { longtable } \l_MRTtab_table_col_tl
          \bool_if:NTF \l_MRTtab_caption_above_bool
            {
              \hline
              \endfoot
            }
            {
              \hline
              \__MRTtab_hide_rowcolors:
              \__MRTtab_table_caption:
              \endfirstfoot
              \hline
              \__MRTtab_table_cont_caption:
              \endfoot
              \__MRTtab_show_rowcolors:
            }
          \int_compare:nNnTF \g__MRTtab_color_upto_int > \c_zero
            {
              \noalign { \int_gset:Nn \g__MRTtab_current_row_int { 1 } }
              \bool_if:NT \l_MRTtab_table_striped_bool
                { \noalign { \global \rownum -\c_one_int } }
              \hline
              \headS
            }
            {
              \bool_if:NTF \l_MRTtab_caption_above_bool
                {
                  \__MRTtab_hide_rowcolors:
                  \tl_if_empty:NF \l_MRTtab_table_cap_tl
                    { \__MRTtab_table_caption: \\ }
                  \hline
                  \endfirsthead
                  \tl_if_empty:NF \l_MRTtab_table_cap_tl
                    { \__MRTtab_table_cont_caption: \\ }
                  \__MRTtab_show_rowcolors:
                  \hline
                  \endhead
                }
                {
                  \hline
                  \endhead
                }
              \noalign { \int_gset:Nn \g__MRTtab_current_row_int { 1 } }
              \bool_if:NT \l_MRTtab_table_striped_bool
                { \noalign { \global \rownum \c_one_int } }
            }
      }%=<<
    \cs_new:Npn \__MRTtab_table_long_end:% >>=
      {
        \end { longtable }
        \l__MRTtab_table_post_hook_tl
      }% =<<
  }
%%===========================================================================<<

\endinput

% vim: ft=tex fdm=marker fmr=>>=,=<< sw=2 ts=2 tw=80
